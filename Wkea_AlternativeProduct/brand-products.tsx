/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

import * as React from 'react';

import { IBrandProductsData } from './brand-products.data';
import { IBrandProductsProps } from './brand-products.props.autogenerated';
import {IWKEAProductExtended} from '../../actions/DataServiceEntities.g';
import {getWKEAProductsExtendedAsync} from '../../actions/DataActionExtension.g';


export interface IBrandProductsViewProps extends IBrandProductsProps<IBrandProductsData> {
    WKEAProducts: IWKEAProductExtended[]
}

export interface IBrandProductsState {
    WKEAProducts: IWKEAProductExtended[]
}

/**
 *
 * BrandProducts component
 * @extends {React.PureComponent<IBrandProductsProps<IBrandProductsData>>}
 */
class BrandProducts extends React.PureComponent<IBrandProductsProps<IBrandProductsData>> {
    public state : IBrandProductsState = {
        WKEAProducts: []
    };

    /*
    private async getWKEAProductsExtended(): Promise<IWKEAProductExtended[]> {
        let WKEAProducts : IWKEAProductExtended[] = [];
        let nullWKEAProduct : IWKEAProductExtended= {
            ItemId:'',
            Product:0,
            MTProduct:0,
            MTItemId:'',
            DataAreaId:''
        }

        for (let index = 0; index < this.props.data.products.length; index++) {
            let WKEAProducts = await  getWKEAProductsExtendedAsync({callerContext: this.props.context.actionContext}, this.props.data.products[index].result?.RecordId || 0, this.props.data.products[index].result?.ItemId || '');
            if (WKEAProducts.length > 0) {
                WKEAProducts.push(WKEAProducts[0]);
            }
            else {
                WKEAProducts.push(nullWKEAProduct);
            }
        }

        return WKEAProducts;
    }*/

    public componentDidMount() : void {
     
        // let WKEAProducts : IWKEAProductExtended[] =  await this.getWKEAProductsExtended();
        let WKEAProducts : IWKEAProductExtended[] = [];
        let nullWKEAProduct : IWKEAProductExtended = {
            ItemId:'',
            Product:0,
            MTProduct:0,
            MTItemId:'',
            DataAreaId:''
        }

        for (let index = 0; index < this.props.data.products.length; index++) {
            getWKEAProductsExtendedAsync({callerContext: this.props.context.actionContext}, this.props.data.products[index].result?.RecordId || 0, this.props.data.products[index].result?.ItemId || '')
            .then(result => {
                if (result.length > 0 && result[0].ItemId) {
                    WKEAProducts.push(result[0]);
                }
                else {
                    WKEAProducts.push(nullWKEAProduct);
                }
            })
           
        }
        this.setState({WKEAProducts: WKEAProducts});
    }

    public render(): JSX.Element | null {
        const viewProps = {
            ...this.props,
            WKEAProducts: this.state.WKEAProducts
        }

        //return this.props.renderView(this.props);
        return this.props.renderView(viewProps);
    }
}

export default BrandProducts;
